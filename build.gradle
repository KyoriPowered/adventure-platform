buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
    maven {
      url 'https://maven.fabricmc.net/'
    }
  }

  dependencies {
    classpath 'gradle.plugin.net.minecrell:licenser:0.4.1'
    classpath 'net.fabricmc:fabric-loom:0.2.6-20191213.183106-50'
  }
}

subprojects {
  apply plugin: 'java-library'
  apply plugin: 'maven'
  apply plugin: 'signing'
  apply plugin: 'net.minecrell.licenser'

  group 'net.kyori'
  version '3.0.3'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path', '-parameters']
    options.deprecation = true
    options.encoding = 'UTF-8'
  }

  license {
    header rootProject.file('header.txt')
    include '**/*.java'
    newLine false
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.0-M1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.0-M1'
  }

  task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar
    archives sourcesJar
  }

  signing {
    required { !project.version.endsWith('-SNAPSHOT') && gradle.taskGraph.hasTask(':uploadArchives') && project.hasProperty('signing.keyId') }
    sign configurations.archives
  }

  if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
    uploadArchives {
      enabled = System.getenv('TRAVIS') == null || project.version.endsWith('-SNAPSHOT')

      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
          }

          snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
          }

          pom.project {
            description 'Extras for text.'
            name project.name
            url 'https://github.com/KyoriPowered/text-extras/'

            developers {
              developer {
                name 'Luck'
              }
            }

            issueManagement {
              system 'GitHub Issues'
              url 'https://github.com/KyoriPowered/text-extras/issues'
            }

            licenses {
              license {
                name 'MIT License'
                url 'https://opensource.org/licenses/MIT'
              }
            }

            scm {
              connection 'scm:git@github.com:KyoriPowered/text-extras.git'
              developerConnection 'scm:git@github.com:KyoriPowered/text-extras.git'
              url 'https://github.com/KyoriPowered/text-extras/'
            }
          }
        }
      }
    }
  }
}
